/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2023-06-14 08:31:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.boardList;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class writing_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>글쓰기</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write(".write_header{\r\n");
      out.write("	color:#90caf9;\r\n");
      out.write("	padding-top: 20px;\r\n");
      out.write("	height: 30%;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	font-size: 40px;\r\n");
      out.write("	margin-bottom: 50px;\r\n");
      out.write("}\r\n");
      out.write(".write_wrap{\r\n");
      out.write("	height: 65%;\r\n");
      out.write("	width: 60%; margin: auto;\r\n");
      out.write("}\r\n");
      out.write(".writer{\r\n");
      out.write("	border:none;\r\n");
      out.write("	width: 20%;\r\n");
      out.write("}\r\n");
      out.write(".title{\r\n");
      out.write("	width: 80%;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".category{\r\n");
      out.write("	width:19%;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("#subBtn{\r\n");
      out.write("	margin:auto;\r\n");
      out.write("	display: block;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	background: #90caf9;\r\n");
      out.write("	color: white;\r\n");
      out.write("	border: none;\r\n");
      out.write("	width: 100px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<!-- include libraries(jQuery, bootstrap) -->\r\n");
      out.write("<link href=\"http://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.js\"></script> \r\n");
      out.write("<script src=\"http://netdna.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.js\"></script> \r\n");
      out.write("<!-- include summernote css/js-->\r\n");
      out.write("<link href=\"https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.11/summernote-bs4.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.11/summernote-bs4.js\"></script>\r\n");
      out.write("<!-- include summernote-ko-KR -->\r\n");
      out.write("<script src=\"/js/summernote-ko-KR.js\"></script>\r\n");
      out.write("<title>글쓰기</title>\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"write_header\">글 작성</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"write_wrap\">\r\n");
      out.write("	<form method=\"post\" action=\"/write\" name=\"frm\" onsubmit=\"return register();\">\r\n");
      out.write("	<div>\r\n");
      out.write("		<label for=\"writer\">작성자 : </label>\r\n");
      out.write("		<input type=\"text\" class=\"writer\" name=\"writer\" id=\"writer\" value=");
      out.print(session.getAttribute("memId") );
      out.write("><br>\r\n");
      out.write("	</div>	\r\n");
      out.write("	<div>\r\n");
      out.write("		<input type=\"text\" class=\"title\" name=\"title\" placeholder=\"제목\"/>\r\n");
      out.write("		<select class=\"category\" name=\"category\" id=\"category\">\r\n");
      out.write("			<option selected value=\"\">카테고리</option>\r\n");
      out.write("			<option value=\"travel\">여행</option>\r\n");
      out.write("			<option value=\"beststore\">맛집</option>\r\n");
      out.write("			<option value=\"cafe\">카페</option>\r\n");
      out.write("			<option value=\"hobby\">취미</option>\r\n");
      out.write("		</select>\r\n");
      out.write("	</div>		\r\n");
      out.write("		<textarea  id=\"summernote\" name=\"content\"></textarea>\r\n");
      out.write("\r\n");
      out.write("		<button class=\"subBtn\" id=\"subBtn\" type=\"submit\">글작성</button> \r\n");
      out.write("	</form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$('.summernote').summernote();\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("	  $('#summernote').summernote({\r\n");
      out.write("\r\n");
      out.write("		  placeholder: '내용을 입력해주세요',\r\n");
      out.write("	        minHeight: 370,    //최소 높이\r\n");
      out.write("	        maxHeight: null,   //최대 높이\r\n");
      out.write("	        focus: true,       // 에디터 로딩 후 포커스를 맞출지 여부 \r\n");
      out.write("	        lang : 'ko-KR',    // 한글 설정\r\n");
      out.write("		  toolbar: [\r\n");
      out.write("			      // 굵기, 기울림꼴, 밑줄, 취소선, 서식지우기\r\n");
      out.write("			     ['style', ['bold', 'italic', 'underline','strikethrough', 'clear']],\r\n");
      out.write("			     // 글자색\r\n");
      out.write("			     ['color', ['color']],\r\n");
      out.write("			    //문단정렬\r\n");
      out.write("			    ['para', ['paragraph']],\r\n");
      out.write("			    //글자 크기\r\n");
      out.write("			    ['fontsize', ['fontsize']],\r\n");
      out.write("			  ],\r\n");
      out.write("			  fontSizes: ['8','9','10','11','12','14','16','18','20','22','24','28','30','36','50','72']\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	 	});	\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("	function register() {\r\n");
      out.write("		//var title = frm.title.value;\r\n");
      out.write("		var frm = document.frm;		\r\n");
      out.write("		//var content = frm.content.value;\r\n");
      out.write("		\r\n");
      out.write("		if (frm.title.value == ''){\r\n");
      out.write("			alert(\"제목을 입력해주세요\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (frm.category.value == ''){\r\n");
      out.write("			alert(\"카테고리를 선택해주세요\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (frm.content.value == ''){\r\n");
      out.write("			alert(\"내용을 입력해주세요\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		frm.submit();\r\n");
      out.write("		return true;\r\n");
      out.write("	}		\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
